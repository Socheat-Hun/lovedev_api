version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: lovedev_postgres
    environment:
      POSTGRES_DB: lovedev_db
      POSTGRES_USER: lovedev_user
      POSTGRES_PASSWORD: lovedev_pass123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lovedev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lovedev_user -d lovedev_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: lovedev_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: lovedev_user
      KC_DB_PASSWORD: lovedev_pass123
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: start-dev
    networks:
      - lovedev_network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: lovedev_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lovedev_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    container_name: lovedev_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - lovedev_network

volumes:
  postgres_data:
  redis_data:

networks:
  lovedev_network:
    driver: bridge