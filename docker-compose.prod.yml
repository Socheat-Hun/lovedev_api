services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: lovedev_postgres
    environment:
      POSTGRES_DB: ${DATABASE_URL}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lovedev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lovedev_api
    environment:
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: prod
      # Database
      DATABASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-lovedev_db}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}

      # JWT
      JWT_SECRET: ${JWT_SECRET}

      # Redis
#      SPRING_DATA_REDIS_HOST: redis
#      SPRING_DATA_REDIS_PORT: 6379
#      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD:-}

      # Email
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME}
      EMAIL_VERIFICATION_URL: ${EMAIL_VERIFICATION_URL}
      EMAIL_RESET_PASSWORD_URL: ${EMAIL_RESET_PASSWORD_URL}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH:-true}
      MAIL_SMTP_STARTTLS: ${MAIL_SMTP_STARTTLS:-true}

      # OAuth2
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-not-set}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-not-set}
      OAUTH2_REDIRECT_URI: ${OAUTH2_REDIRECT_URI}

      # CORS
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}

      # JVM Options
      JAVA_OPTS: "-Xms512m -Xmx1024m"

    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - lovedev_network
    volumes:
      - app_uploads:/uploads
#      - app_logs:/app/logs
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lovedev_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - lovedev_network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  lovedev_network:
    driver: bridge