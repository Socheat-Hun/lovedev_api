# Production Environment Configuration
spring:
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/lovedev_db}
    username: ${DATABASE_USERNAME:lovedev_user}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 60000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2

  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

# Application Configuration
app:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 900000 # 15 minutes
    refresh-expiration: 604800000 # 7 days
    issuer: lovedev-api
    audience: lovedev-client

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://app.lovedev.com}
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
    allowed-headers: "*"
    allow-credentials: true

  file:
    upload-dir: ${FILE_UPLOAD_DIR:/app/uploads}
    max-size: 10485760 # 10MB
    allowed-extensions:
      - jpg
      - jpeg
      - png
      - gif
      - webp

  email:
    from: ${EMAIL_FROM:noreply@lovedev.com}
    from-name: ${EMAIL_FROM_NAME:LoveDev Team}
    verification-url: ${EMAIL_VERIFICATION_URL:https://api.lovedev.com/api/v1/auth/verify-email}
    reset-password-url: ${EMAIL_RESET_PASSWORD_URL:https://app.lovedev.com/reset-password}
    enabled: true

  keycloak:
    enabled: ${KEYCLOAK_ENABLED:false}
    server-url: ${KEYCLOAK_SERVER_URL:http://localhost:8080}
    realm: ${KEYCLOAK_REALM:lovedev}
    client-id: ${KEYCLOAK_CLIENT_ID:lovedev-api}
    client-secret: ${KEYCLOAK_CLIENT_SECRET}

# Logging for Production
logging:
  level:
    root: WARN
    com.lovedev.api: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %-5level [%thread] %logger{36} - %msg%n"
  file:
    name: logs/lovedev-api-prod.log
    max-size: 50MB
    max-history: 30

server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true

# Actuator for Production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    redis:
      enabled: true
    db:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 1m