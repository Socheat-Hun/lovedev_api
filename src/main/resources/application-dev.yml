# Development Environment Configuration
spring:

  config:
    import: optional:file:.env.local[.properties]

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        highlight_sql: true
    open-in-view: false  # Disable open-in-view

  flyway:
    enabled: true
    baseline-on-migrate: true
    #clean-disabled: false
    locations: classpath:db/migration

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  mail:
    default-encoding: UTF-8
    host: ${MAIL_HOST}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google

          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - user:email
              - read:user
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: GitHub

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id

# Application Configuration
app:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 900000 # 15 minutes
    refresh-expiration: 604800000 # 7 days

  cors:
    allowed-origins:
      - http://localhost:3000
      - http://localhost:4200
      - http://localhost:5173
      - http://127.0.0.1:3000
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers: "*"
    allow-credentials: true

  file:
    upload-dir: ./uploads
    max-size: 10485760 # 10MB
    allowed-extensions:

  email:
    from: ${EMAIL_FROM}
    from-name: ${EMAIL_FROM_NAME}
    enabled: true
    verification-url: ${EMAIL_VERIFICATION_URL}
    reset-password-url: ${EMAIL_RESET_PASSWORD_URL}
    host: localhost
    port: 1025

# Logging for Development
logging:
  level:
    root: INFO
    com.lovedev.api: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security.config.annotation.authentication.configuration: ERROR

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) %logger{36} - %msg%n"

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: always
    include-exception: true

# Actuator for Development
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  health:
    redis:
      enabled: false


